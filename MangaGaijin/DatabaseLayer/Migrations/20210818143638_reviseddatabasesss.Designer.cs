// <auto-generated />
using System;
using DatabaseLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MangaGaijinData.Migrations
{
    [DbContext(typeof(MangaGaijinContext))]
    [Migration("20210818143638_reviseddatabasesss")]
    partial class reviseddatabasesss
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MangaGaijinData.Manga", b =>
                {
                    b.Property<int>("MangaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Chapters")
                        .HasColumnType("int");

                    b.Property<string>("MangaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublishStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MangaId");

                    b.ToTable("Manga");
                });

            modelBuilder.Entity("MangaGaijinData.MangaCollection", b =>
                {
                    b.Property<int>("MangaCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("chapterNo")
                        .HasColumnType("int");

                    b.HasKey("MangaCollectionId");

                    b.HasIndex("UserID");

                    b.ToTable("MangaCollections");
                });

            modelBuilder.Entity("MangaGaijinData.MangaCollectionLink", b =>
                {
                    b.Property<int>("MangaCollectionLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MangaCollectionId")
                        .HasColumnType("int");

                    b.Property<int>("MangaId")
                        .HasColumnType("int");

                    b.HasKey("MangaCollectionLinkId");

                    b.HasIndex("MangaCollectionId");

                    b.HasIndex("MangaId");

                    b.ToTable("MangaCollectionLink");
                });

            modelBuilder.Entity("MangaGaijinData.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MangaGaijinData.MangaCollection", b =>
                {
                    b.HasOne("MangaGaijinData.User", null)
                        .WithMany("Collection")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("MangaGaijinData.MangaCollectionLink", b =>
                {
                    b.HasOne("MangaGaijinData.MangaCollection", "Collection")
                        .WithMany()
                        .HasForeignKey("MangaCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MangaGaijinData.Manga", "Manga")
                        .WithMany("Collection")
                        .HasForeignKey("MangaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("Manga");
                });

            modelBuilder.Entity("MangaGaijinData.Manga", b =>
                {
                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MangaGaijinData.User", b =>
                {
                    b.Navigation("Collection");
                });
#pragma warning restore 612, 618
        }
    }
}
